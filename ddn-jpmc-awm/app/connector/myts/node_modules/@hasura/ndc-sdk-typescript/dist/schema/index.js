"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ValidateResponseSchema = exports.ErrorResponseSchema = exports.MutationResponseSchema = exports.MutationRequestSchema = exports.ExplainResponseSchema = exports.QueryResponseSchema = exports.QueryRequestSchema = exports.SchemaResponseSchema = exports.CapabilitiesResponseSchema = void 0;
const schema_generated_json_1 = __importDefault(require("./schema.generated.json"));
function schemaForType(type_name) {
    return {
        $schema: schema_generated_json_1.default.$schema,
        $ref: `#/definitions/${type_name}`,
        definitions: schema_generated_json_1.default.definitions
    };
}
const CapabilitiesResponseSchema = schemaForType("CapabilitiesResponse");
exports.CapabilitiesResponseSchema = CapabilitiesResponseSchema;
const SchemaResponseSchema = schemaForType("SchemaResponse");
exports.SchemaResponseSchema = SchemaResponseSchema;
const QueryRequestSchema = schemaForType("QueryRequest");
exports.QueryRequestSchema = QueryRequestSchema;
const QueryResponseSchema = schemaForType("QueryResponse");
exports.QueryResponseSchema = QueryResponseSchema;
const ExplainResponseSchema = schemaForType("ExplainResponse");
exports.ExplainResponseSchema = ExplainResponseSchema;
const MutationRequestSchema = schemaForType("MutationRequest");
exports.MutationRequestSchema = MutationRequestSchema;
const MutationResponseSchema = schemaForType("MutationResponse");
exports.MutationResponseSchema = MutationResponseSchema;
const ErrorResponseSchema = schemaForType("ErrorResponse");
exports.ErrorResponseSchema = ErrorResponseSchema;
const ValidateResponseSchema = schemaForType("ValidateResponse");
exports.ValidateResponseSchema = ValidateResponseSchema;
__exportStar(require("./schema.generated"), exports);
//# sourceMappingURL=index.js.map